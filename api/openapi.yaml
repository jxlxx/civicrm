openapi: 3.0.3
info:
  title: CiviCRM API v4
  description: CiviCRM REST API v4 specification
  version: 4.0.0
  contact:
    name: CiviCRM Team
    url: https://civicrm.org

servers:
  - url: /api/v4
    description: API v4 base URL

paths:
  /:
    get:
      operationId: apiInfo
      summary: Get API information
      description: Returns information about the CiviCRM API v4
      responses:
        '200':
          description: API information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIInfo'
  
  /{entity}/{action}:
    get:
      operationId: entityGet
      summary: Get entities
      description: Retrieve entities of the specified type
      parameters:
        - name: entity
          in: path
          required: true
          schema:
            type: string
          description: Entity type (e.g., Contact, Contribution, Event)
        - name: action
          in: path
          required: true
          schema:
            type: string
          description: Action to perform (e.g., get, create, update, delete)
        - name: id
          in: query
          schema:
            type: string
          description: Entity ID for single entity retrieval
        - name: select
          in: query
          schema:
            type: string
          description: Comma-separated list of fields to select
        - name: where
          in: query
          schema:
            type: string
          description: JSON string of where conditions
        - name: orderBy
          in: query
          schema:
            type: string
          description: JSON string of order by clauses
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
          description: Maximum number of records to return
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
          description: Number of records to skip
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    post:
      operationId: entityCreate
      summary: Create entity
      description: Create a new entity of the specified type
      parameters:
        - name: entity
          in: path
          required: true
          schema:
            type: string
          description: Entity type
        - name: action
          in: path
          required: true
          schema:
            type: string
          description: Action (usually 'create')
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '201':
          description: Entity created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    put:
      operationId: entityUpdate
      summary: Update entity
      description: Update an existing entity
      parameters:
        - name: entity
          in: path
          required: true
          schema:
            type: string
          description: Entity type
        - name: action
          in: path
          required: true
          schema:
            type: string
          description: Action (usually 'update')
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: Entity ID to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: Entity updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    delete:
      operationId: entityDelete
      summary: Delete entity
      description: Delete an entity
      parameters:
        - name: entity
          in: path
          required: true
          schema:
            type: string
          description: Entity type
        - name: action
          in: path
          required: true
          schema:
            type: string
          description: Action (usually 'delete')
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: Entity ID to delete
      responses:
        '200':
          description: Entity deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '404':
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health:
    get:
      operationId: healthCheck
      summary: Health check
      description: Check if the service is healthy
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /extensions:
    get:
      operationId: listExtensions
      summary: List extensions
      description: Get list of loaded extensions
      responses:
        '200':
          description: List of extensions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Extension'

components:
  schemas:
    APIInfo:
      type: object
      properties:
        version:
          type: string
          example: "4.0.0"
        name:
          type: string
          example: "CiviCRM API v4"
        description:
          type: string
          example: "CiviCRM REST API v4"
        entities:
          type: array
          items:
            type: string
          example: ["Contact", "Contribution", "Event", "Membership"]
    
    APIResponse:
      type: object
      properties:
        values:
          type: array
          items:
            type: object
            additionalProperties: true
        count:
          type: integer
          description: Number of records returned
        is_error:
          type: boolean
          example: false
        error_message:
          type: string
        error_code:
          type: string
    
    ErrorResponse:
      type: object
      properties:
        is_error:
          type: boolean
          example: true
        error_message:
          type: string
          description: Human-readable error message
        error_code:
          type: string
          description: Machine-readable error code
        error_data:
          type: object
          additionalProperties: true
          description: Additional error context
    
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["healthy", "unhealthy"]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        uptime:
          type: string
          description: Service uptime in human-readable format
    
    Extension:
      type: object
      properties:
        name:
          type: string
          description: Extension name
        version:
          type: string
          description: Extension version
        status:
          type: string
          enum: ["active", "inactive", "error"]
          description: Extension status
        description:
          type: string
          description: Extension description

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []
